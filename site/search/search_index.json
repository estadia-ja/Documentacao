{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"In\u00edcio","text":""},{"location":"#pagina-inicial","title":"pagina inicial","text":""},{"location":"arquitetura/","title":"Documenta\u00e7\u00e3o da Arquitetura do Backend","text":"<p>Nossa arquitetura de backend \u00e9 baseada em um modelo orientado a dom\u00ednios de neg\u00f3cio. Essa abordagem divide a aplica\u00e7\u00e3o em m\u00f3dulos, onde cada m\u00f3dulo \u00e9 uma camada de dom\u00ednio que encapsula toda a l\u00f3gica e dados de uma funcionalidade espec\u00edfica (como <code>user</code>, <code>produto</code>, <code>pagamento</code>). Dentro de cada dom\u00ednio, aplicamos o padr\u00e3o MVC (Model-View-Controller) para organizar o c\u00f3digo.</p> <p>Essa escolha garante a separa\u00e7\u00e3o de responsabilidades, manuten\u00e7\u00e3o simplificada e a prepara\u00e7\u00e3o ideal para uma futura migra\u00e7\u00e3o para microsservi\u00e7os.</p>"},{"location":"arquitetura/#1-estrutura-das-camadas-de-dominio-baseada-em-mvc","title":"1. Estrutura das Camadas de Dom\u00ednio (Baseada em MVC)","text":"<p>Cada dom\u00ednio de neg\u00f3cio atua como uma camada modular que cont\u00e9m toda a l\u00f3gica necess\u00e1ria para sua funcionalidade. A organiza\u00e7\u00e3o interna de cada dom\u00ednio segue o padr\u00e3o MVC, com responsabilidades bem definidas:</p> <ul> <li> <p>Camada de Apresenta\u00e7\u00e3o (<code>routes.js</code>):</p> <ul> <li>Fun\u00e7\u00e3o: Respons\u00e1vel por receber as requisi\u00e7\u00f5es HTTP e atuar como o ponto de entrada da API.</li> <li>Responsabilidade: Define os endpoints (por exemplo, <code>POST /users</code>) e direciona as requisi\u00e7\u00f5es para o <code>Controller</code> do dom\u00ednio.</li> </ul> </li> <li> <p>Camada de L\u00f3gica de Neg\u00f3cio (<code>controller.js</code> e <code>service.js</code>):</p> <ul> <li>Fun\u00e7\u00e3o: Cont\u00e9m a l\u00f3gica central da aplica\u00e7\u00e3o e orquestra as opera\u00e7\u00f5es.</li> <li>Responsabilidade: O Controller recebe as requisi\u00e7\u00f5es da camada de apresenta\u00e7\u00e3o e chama o Service, que por sua vez executa as regras de neg\u00f3cio, valida\u00e7\u00f5es e coordena\u00e7\u00e3o de a\u00e7\u00f5es.</li> </ul> </li> <li> <p>Camada de Acesso a Dados (<code>model.js</code>):</p> <ul> <li>Fun\u00e7\u00e3o: Interage diretamente com o banco de dados.</li> <li>Responsabilidade: O Model lida com a entidade e utiliza o Prisma para realizar opera\u00e7\u00f5es de CRUD (Criar, Ler, Atualizar, Deletar), garantindo a integridade dos dados.</li> </ul> </li> </ul>"},{"location":"arquitetura/#2-estrutura-de-pastas-do-projeto","title":"2. Estrutura de Pastas do Projeto","text":"<p>A estrutura de pastas reflete a arquitetura de dom\u00ednio e ajuda a manter a organiza\u00e7\u00e3o e a escalabilidade do projeto.</p> <pre><code>    src/\n    \u251c\u2500\u2500 middlewares/\n    \u2502   \u2514\u2500\u2500 validation.js\n    \u251c\u2500\u2500 user/\n    \u2502   \u251c\u2500\u2500 controller.js\n    \u2502   \u251c\u2500\u2500 model.js\n    \u2502   \u251c\u2500\u2500 routes.js\n    \u2502   \u251c\u2500\u2500 service.js\n    \u2502   \u2514\u2500\u2500 test/\n    \u2502   \u2502   \u251c\u2500\u2500 user.controller.test.js\n    \u2502   \u2502   \u251c\u2500\u2500 user.model.test.js\n    \u2502   \u2502   \u2514\u2500\u2500 user.service.test.js\n    \u251c\u2500\u2500 validations/\n    \u2502   \u2514\u2500\u2500 userValidation.js\n    \u251c\u2500\u2500 database.js\n    \u251c\u2500\u2500 index.js\n    \u2514\u2500\u2500 swagger.js\n</code></pre> <ul> <li><code>src/</code>: Diret\u00f3rio principal que cont\u00e9m todo o c\u00f3digo fonte da aplica\u00e7\u00e3o.</li> <li><code>src/user/</code>: Representa um dom\u00ednio de neg\u00f3cio. Essa estrutura ser\u00e1 replicada para cada nova entidade, como <code>src/product/</code>, <code>src/payment/</code>, etc.</li> <li><code>src/middlewares/</code>: Armazena middlewares gen\u00e9ricos que podem ser aplicados em diversas rotas, como middlewares de autentica\u00e7\u00e3o ou de logs.</li> <li><code>src/validations/</code>: Cont\u00e9m as regras de valida\u00e7\u00e3o espec\u00edficas para cada entidade, garantindo que os dados que chegam ao Service estejam corretos.</li> <li><code>database.js</code>: Isola a configura\u00e7\u00e3o e a conex\u00e3o com o banco de dados, facilitando a troca de provedores de banco de dados no futuro.</li> <li><code>index.js</code>: O ponto de entrada da aplica\u00e7\u00e3o.</li> <li><code>swagger.js</code>: Arquivo de configura\u00e7\u00e3o para a documenta\u00e7\u00e3o da API (Swagger/OpenAPI).</li> </ul>"},{"location":"arquitetura/#3-fluxo-de-dados-request-response","title":"3. Fluxo de Dados (Request-Response)","text":"<p>O fluxo de uma requisi\u00e7\u00e3o HTTP dentro de um dom\u00ednio segue a seguinte sequ\u00eancia:</p> <ol> <li>A requisi\u00e7\u00e3o chega ao arquivo de rotas (<code>routes.js</code>) na Camada de Apresenta\u00e7\u00e3o.</li> <li>A rota a direciona para o Controller (<code>controller.js</code>).</li> <li>O <code>Controller</code> delega a l\u00f3gica para o Service (<code>service.js</code>) na Camada de L\u00f3gica de Neg\u00f3cio.</li> <li>O <code>Service</code> interage com o Model (<code>model.js</code>) na Camada de Acesso a Dados.</li> <li>O <code>Model</code> usa o Prisma para a comunica\u00e7\u00e3o com o banco de dados.</li> <li>O resultado \u00e9 retornado do <code>Model</code> para o <code>Service</code>, depois para o <code>Controller</code>, que formata a resposta e a envia de volta ao cliente.</li> </ol>"},{"location":"arquitetura/#historico-de-commits","title":"Hist\u00f3rico de Commits","text":"Data Tipo Descri\u00e7\u00e3o 22/09/2025 feat Adiciona a documenta\u00e7\u00e3o da arquitetuta que o Banckend est\u00e1 usando"},{"location":"backlog/","title":"Backlog - Estadia J\u00e1","text":""},{"location":"backlog/#funcionalidades-para-usuarios","title":"\ud83d\udc64 Funcionalidades para Usu\u00e1rios","text":""},{"location":"backlog/#autenticacao","title":"\ud83d\udccb Autentica\u00e7\u00e3o","text":"<ul> <li>[ ] Cadastro de usu\u00e1rios<ul> <li>Eu como usu\u00e1rio, desejo me cadastrar na plataforma.</li> </ul> </li> <li>[ ] Login na plataforma<ul> <li>Eu como usu\u00e1rio, desejo fazer o login\u00a0na plataforma.</li> </ul> </li> <li>[ ] Logout na plataforma<ul> <li>Eu como usu\u00e1rio, desejo fazer logout\u00a0da plataforma.</li> </ul> </li> <li>[ ] Atualiza\u00e7\u00e3o de cadastro<ul> <li>Eu como usu\u00e1rio, desejo atualizar meu cadastro\u00a0na plataforma.</li> </ul> </li> <li>[ ] Cancelamento de conta<ul> <li>Eu como usu\u00e1rio, desejo cancelar meu cadastro\u00a0na plataforma.</li> </ul> </li> </ul>"},{"location":"backlog/#busca-e-reservas","title":"\ud83d\udd0d Busca e Reservas","text":"<ul> <li>[ ] Pesquisar im\u00f3veis por avalia\u00e7\u00e3o<ul> <li>Eu como usu\u00e1rio, desejo pequisar im\u00f3veis por avalia\u00e7\u00e3o para poder escolher entre as melhores avalia\u00e7\u00f5es.</li> </ul> </li> <li>[ ] Pesquisar im\u00f3veis por tipo<ul> <li>Eu como usu\u00e1rio, desejo fazer pesquisa por tipo de im\u00f3vel para visualizar apenas os tipos que eu procuro.</li> </ul> </li> <li>[ ] Pesquisar im\u00f3veis por disponibilidade<ul> <li>Eu como usu\u00e1rio, desejo fazer pesquisa por data para achar im\u00f3veis disponiveis nasmesmas datas que eu tenho disponibilidade.</li> </ul> </li> <li>[ ] Pesquisar im\u00f3veis por local<ul> <li>Eu como usu\u00e1rio, desejo fazer pesquisa por cidade para visualizar apenas as localidades que eu desejo.</li> </ul> </li> <li>[ ] Pesquisar im\u00f3veis por pre\u00e7o<ul> <li>Eu como usu\u00e1rio, desejo fazer pesquisa por pre\u00e7o para visualizar apenas os pre\u00e7os que est\u00e3o no meu or\u00e7amento.</li> </ul> </li> <li>[ ] Ver detalhes de im\u00f3vel<ul> <li>Eu como usu\u00e1rio, desejo visualizar detalhes de um im\u00f3vel para saber se ele cumpre com as minhas exigencias.</li> </ul> </li> <li>[ ] Fazer reserva de im\u00f3vel<ul> <li>Eu como usu\u00e1rio, desejo fazer uma reserva de um im\u00f3vel para deixar ele reservado.</li> </ul> </li> <li>[ ] Cancelar reserva de im\u00f3vel<ul> <li>Eu\u00a0usu\u00e1rio, desejo cancelar minha reserva para que, em caso de imprevistos, eu consiga desfaz\u00ea-la sem complica\u00e7\u00f5es.</li> </ul> </li> <li>[ ] Atualizar reserva existente<ul> <li>Eu como usu\u00e1rio, desejo atualizar a minha reserva para caso tenha que remarcar datas ou outras coisas.</li> </ul> </li> <li>[ ] Visualizar hist\u00f3rico de reservas<ul> <li>Eu como usu\u00e1rio, desejo visualizar meu host\u00f3rico de reservas para saber o lugares que fui e para onde eu ainda vou.</li> </ul> </li> <li>[ ] Favoritar Im\u00f3vel<ul> <li>Eu como usu\u00e1rio, desejo favoritar alguns im\u00f3veis que eu gostei para deixa-los salvos e mais f\u00e1cil de encontrar.</li> </ul> </li> <li>[ ] NotificardDesconto/promo\u00e7\u00e3o<ul> <li>Eu como usu\u00e1rio, desejo ser notificado caso um dos meus im\u00f3veis favoritados esteja com desconto ou promo\u00e7\u00e3o para ver se vale apena fazer a reserva de imediato.</li> </ul> </li> </ul>"},{"location":"backlog/#avaliacoes","title":"\u2b50 Avalia\u00e7\u00f5es","text":"<ul> <li>[ ] Avaliar im\u00f3vel<ul> <li>Eu como usu\u00e1rio, desejo fazer avalia\u00e7\u00f5es sobre o im\u00f3vel para registrar a minha experi\u00eancia.</li> </ul> </li> <li>[ ] Excluir avalia\u00e7\u00e3o<ul> <li>Eu como usu\u00e1rio, desejo apagar a minha avalia\u00e7\u00e3o para que eu tenha controle sobre o conte\u00fado que compartilho.</li> </ul> </li> <li>[ ] Avaliar hospede<ul> <li>Eu como propriet\u00e1rio, desejo fazer avalia\u00e7\u00f5es sobre o hospede para registrar minha experi\u00eancia e informar outros propriet\u00e1rios sobre o comportamento dele.</li> </ul> </li> </ul>"},{"location":"backlog/#funcionalidades-para-proprietarios","title":"\ud83d\udc68\u200d\ud83d\udcbc Funcionalidades para Propriet\u00e1rios","text":""},{"location":"backlog/#gerenciamento-de-imoveis","title":"\ud83c\udfe0 Gerenciamento de Im\u00f3veis","text":"<ul> <li>[ ] Cadastrar im\u00f3vel<ul> <li>Eu como propriet\u00e1rio, desejo cadastrar meu im\u00f3vel para que eu possa disponibiliz\u00e1-lo para aluguel.</li> </ul> </li> <li>[ ] Atualizar informa\u00e7\u00f5es do im\u00f3vel<ul> <li>Eu como propriet\u00e1rio, desejo atualizar meu im\u00f3vel para deixar ele sempre com as informa\u00e7\u00f5es certas.</li> </ul> </li> <li>[ ] Remover im\u00f3vel<ul> <li>Eu como propriet\u00e1rio, desejo remover meu im\u00f3vel para ter controle dos im\u00f3veis que estou alugando.</li> </ul> </li> <li>[ ] Listar propriedades cadastradas<ul> <li>Eu como propriet\u00e1rio, desejo listar minha propriedades para visualizar as propriedades que tenho cadastradas.</li> </ul> </li> <li>[ ] Controlar disponibilidade<ul> <li>Eu como propriet\u00e1rio desejo visualizar os status das minha propriedades para saber se ela est\u00e1 reservada ou n\u00e3o.</li> </ul> </li> <li>[ ] Ter um Dashboard<ul> <li>Eu como propriet\u00e1rio, desejo ter visualizar um DashBoard com as informa\u00e7\u00f5es dos meu ganhamos, im\u00f3veis alugados, im\u00f3vel mais alugado, lucro por muni\u0107ipio e outras infoma\u00e7\u00f5es dos meus im\u00f3veis para ter fazer uma an\u00e1lise dos meus alugueis.</li> </ul> </li> <li>[ ] Relat\u00f3rio<ul> <li>Eu como propriet\u00e1rio, desejo gerar um relat\u00f3rio com ocupa\u00e7\u00e3o, avalia\u00e7\u00e3o m\u00e9dia, receita por im\u00f3vel e por per\u00edodo e pdf para eu ter uma an\u00e1lise sobre meus im\u00f3veis fora do plataforma.</li> </ul> </li> <li>[ ] Realizar descontos ou promo\u00e7\u00f5es<ul> <li>Eu coo propriet\u00e1rio, deseja realizar descontos ou proma\u00e7\u00e3o nos meus im\u00f3veis para atrair mais clientes.</li> </ul> </li> </ul> <p>\ud83d\udcdd Status: \u2b1c\ufe0f A fazer \ud83d\udd32 Em andamento \u2705 Conclu\u00eddo</p>"},{"location":"banco-de-dados/","title":"Banco de Dados","text":""},{"location":"banco-de-dados/#modelo-entidade-relacionamento-me-r","title":"Modelo Entidade-Relacionamento (ME-R)","text":""},{"location":"banco-de-dados/#identificacoes-das-entidades","title":"Identifica\u00e7\u00f5es das Entidades","text":"<ul> <li>USER</li> <li>PROPERTY</li> <li>RESERVE</li> <li>PROPERTYVALUATION</li> <li>CLIENTVALUATION</li> <li>PAYMENT</li> </ul>"},{"location":"banco-de-dados/#descricoes-das-entidades-atributos","title":"Descri\u00e7\u00f5es das Entidades (Atributos)","text":"<ul> <li>USER (userId, name, email, password, {phone}, cpf, userImage)</li> <li>PROPERTY (propertyId, type, description, numberOfBedroom, numberOfSuites, numberOfGarage, numberOfBathroom, numberOfRoom, outdoor, pool, barbecue, dailyRate, {propertyImages}, endereco(street, number, neighborhood, city, state, CEP))</li> <li>RESERVE (reserveId, dateStart, dateEnd, reserveStatus)</li> <li>PROPERTYVALUATION (propertyValuationId, noteProperty, commentProperty, datePropertyValuation)</li> <li>CLIENTVALUATION (clientValuationId, noteClient, commentClient, dateClientValuation)</li> <li>PAYMENT (paymentId, paymentValue, datePayment, paymentStatus)</li> </ul>"},{"location":"banco-de-dados/#descricao-dos-relacionamentos","title":"Descri\u00e7\u00e3o dos Relacionamentos","text":"<ul> <li> <p>USER have PROPERTY</p> <ul> <li>Descri\u00e7\u00e3o: Esta rela\u00e7\u00e3o representa a posse de um im\u00f3vel por um usu\u00e1rio.</li> <li>Regra de Neg\u00f3cio: Um USER pode possuir um ou v\u00e1rios PROPERTIES (<code>1,n</code>), mas um PROPERTY pertence a um e somente um USER (<code>1,1</code>).</li> <li>Cardinalidade: (1:N)</li> </ul> </li> <li> <p>USER makeReserve PROPERTY</p> <ul> <li>Descri\u00e7\u00e3o: Esta rela\u00e7\u00e3o de neg\u00f3cio d\u00e1 origem \u00e0 entidade associativa <code>RESERVE</code>.</li> <li>Regra de Neg\u00f3cio: Um USER pode fazer v\u00e1rias (<code>0,n</code>) reservas, e um PROPERTY pode ser reservado v\u00e1rias vezes (<code>0,n</code>).</li> <li>Cardinalidade: (N:N)</li> </ul> </li> <li> <p>RESERVE makePropertyValuation PROPERTYVALUATION</p> <ul> <li>Descri\u00e7\u00e3o: Define que uma avalia\u00e7\u00e3o do im\u00f3vel (<code>PROPERTYVALUATION</code>) s\u00f3 pode existir no contexto de uma reserva (<code>RESERVE</code>).</li> <li>Regra de Neg\u00f3cio: Uma RESERVE pode ter no m\u00e1ximo uma PROPERTYVALUATION (<code>0,1</code>). Uma PROPERTYVALUATION pertence a uma e somente uma RESERVE (<code>1,1</code>).</li> <li>Cardinalidade: (1:0,1)</li> </ul> </li> <li> <p>RESERVE makeClientValuation CLIENTVALUATION</p> <ul> <li>Descri\u00e7\u00e3o: Define que uma avalia\u00e7\u00e3o do cliente (<code>CLIENTVALUATION</code>) s\u00f3 pode existir no contexto de uma reserva (<code>RESERVE</code>).</li> <li>Regra de Neg\u00f3cio: Uma RESERVE pode ter no m\u00e1ximo uma CLIENTVALUATION (<code>0,1</code>). Uma CLIENTVALUATION pertence a uma e somente uma RESERVE (<code>1,1</code>).</li> <li>Cardinalidade: (1:0,1)</li> </ul> </li> <li> <p>USER do PAYMENT</p> <ul> <li>Descri\u00e7\u00e3o: Associa um pagamento a um usu\u00e1rio.</li> <li>Regra de Neg\u00f3cio (Conforme o Diagrama): Um USER est\u00e1 associado a um e somente um PAYMENT (<code>1,1</code>). Um PAYMENT espec\u00edfico refere-se a um e somente um USER (<code>1,1</code>).</li> <li>Cardinalidade: (1:1)</li> </ul> </li> </ul>"},{"location":"banco-de-dados/#diagrama-de-entidade-relacionamentode-r","title":"Diagrama de Entidade-Relacionamento(DE-R)","text":""},{"location":"banco-de-dados/#diagrama-logico-de-dadosdld","title":"Diagrama L\u00f3gico de Dados(DLD)","text":""},{"location":"banco-de-dados/#diagrama-fisico","title":"Diagrama F\u00edsico","text":""},{"location":"banco-de-dados/#sql-de-creacao-das-tabelas","title":"SQL de crea\u00e7\u00e3o das tabelas","text":"<pre><code>-- public.users defini\u00e7\u00e3o\n\n-- Drop table\n\n-- DROP TABLE public.users;\n\nCREATE TABLE public.users (\n    id text NOT NULL,\n    \"name\" text NOT NULL,\n    email text NOT NULL,\n    cpf text NOT NULL,\n    \"password\" text NOT NULL,\n    \"createdAt\" timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) NOT NULL,\n    \"userImage\" bytea NULL,\n    CONSTRAINT users_pkey PRIMARY KEY (id)\n);\nCREATE UNIQUE INDEX users_cpf_key ON public.users USING btree (cpf);\nCREATE UNIQUE INDEX users_email_key ON public.users USING btree (email);\n\n\n-- public.phones defini\u00e7\u00e3o\n\n-- Drop table\n\n-- DROP TABLE public.phones;\n\nCREATE TABLE public.phones (\n    id text NOT NULL,\n    phone text NOT NULL,\n    \"userId\" text NOT NULL,\n    CONSTRAINT phones_pkey PRIMARY KEY (id),\n    CONSTRAINT \"phones_userId_fkey\" FOREIGN KEY (\"userId\") REFERENCES public.users(id) ON DELETE CASCADE ON UPDATE CASCADE\n);\nCREATE UNIQUE INDEX phones_phone_key ON public.phones USING btree (phone);\n\n\n-- public.properties defini\u00e7\u00e3o\n\n-- Drop table\n\n-- DROP TABLE public.properties;\n\nCREATE TABLE public.properties (\n    id text NOT NULL,\n    \"type\" text NOT NULL,\n    description text NOT NULL,\n    \"numberOfBedroom\" int4 NOT NULL,\n    \"numberOfSuite\" int4 NOT NULL,\n    \"numberOfGarage\" int4 NOT NULL,\n    \"numberOfRoom\" int4 NOT NULL,\n    \"numberOfBathroom\" int4 NOT NULL,\n    \"outdoorArea\" bool NOT NULL,\n    pool bool NOT NULL,\n    barbecue bool NOT NULL,\n    street text NOT NULL,\n    \"number\" int4 NOT NULL,\n    neighborhood text NOT NULL,\n    state text NOT NULL,\n    city text NOT NULL,\n    \"CEP\" text NOT NULL,\n    \"dailyRate\" float8 NOT NULL,\n    \"userId\" text NOT NULL,\n    CONSTRAINT properties_pkey PRIMARY KEY (id),\n    CONSTRAINT \"properties_userId_fkey\" FOREIGN KEY (\"userId\") REFERENCES public.users(id) ON DELETE CASCADE ON UPDATE CASCADE\n);\n\n\n-- public.property_images defini\u00e7\u00e3o\n\n-- Drop table\n\n-- DROP TABLE public.property_images;\n\nCREATE TABLE public.property_images (\n    id text NOT NULL,\n    \"propertyId\" text NOT NULL,\n    image bytea NOT NULL,\n    CONSTRAINT property_images_pkey PRIMARY KEY (id),\n    CONSTRAINT \"property_images_propertyId_fkey\" FOREIGN KEY (\"propertyId\") REFERENCES public.properties(id) ON DELETE CASCADE ON UPDATE CASCADE\n);\n\n\n-- public.reserves defini\u00e7\u00e3o\n\n-- Drop table\n\n-- DROP TABLE public.reserves;\n\nCREATE TABLE public.reserves (\n    id text NOT NULL,\n    \"dateStart\" timestamp(3) NOT NULL,\n    \"dateEnd\" timestamp(3) NOT NULL,\n    status text NOT NULL,\n    \"propertyId\" text NOT NULL,\n    \"userId\" text NOT NULL,\n    CONSTRAINT reserves_pkey PRIMARY KEY (id),\n    CONSTRAINT \"reserves_propertyId_fkey\" FOREIGN KEY (\"propertyId\") REFERENCES public.properties(id) ON DELETE CASCADE ON UPDATE CASCADE,\n    CONSTRAINT \"reserves_userId_fkey\" FOREIGN KEY (\"userId\") REFERENCES public.users(id) ON DELETE CASCADE ON UPDATE CASCADE\n);\n\n\n-- public.client_valuations defini\u00e7\u00e3o\n\n-- Drop table\n\n-- DROP TABLE public.client_valuations;\n\nCREATE TABLE public.client_valuations (\n    id text NOT NULL,\n    \"noteClient\" float8 NOT NULL,\n    \"commentClient\" text NULL,\n    \"dateClientValuation\" timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"reserveId\" text NOT NULL,\n    CONSTRAINT client_valuations_pkey PRIMARY KEY (id),\n    CONSTRAINT \"client_valuations_reserveId_fkey\" FOREIGN KEY (\"reserveId\") REFERENCES public.reserves(id) ON DELETE CASCADE ON UPDATE CASCADE\n);\nCREATE UNIQUE INDEX \"client_valuations_reserveId_key\" ON public.client_valuations USING btree (\"reserveId\");\n\n\n-- public.payments defini\u00e7\u00e3o\n\n-- Drop table\n\n-- DROP TABLE public.payments;\n\nCREATE TABLE public.payments (\n    id text NOT NULL,\n    \"paymentValue\" float8 NOT NULL,\n    \"datePayment\" timestamp(3) NOT NULL,\n    \"reserveId\" text NOT NULL,\n    CONSTRAINT payments_pkey PRIMARY KEY (id),\n    CONSTRAINT \"payments_reserveId_fkey\" FOREIGN KEY (\"reserveId\") REFERENCES public.reserves(id) ON DELETE CASCADE ON UPDATE CASCADE\n);\nCREATE UNIQUE INDEX \"payments_reserveId_key\" ON public.payments USING btree (\"reserveId\");\n\n\n-- public.property_valuations defini\u00e7\u00e3o\n\n-- Drop table\n\n-- DROP TABLE public.property_valuations;\n\nCREATE TABLE public.property_valuations (\n    id text NOT NULL,\n    \"noteProperty\" float8 NOT NULL,\n    \"commentProperty\" text NULL,\n    \"datePropertyValuation\" timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"reserveId\" text NOT NULL,\n    CONSTRAINT property_valuations_pkey PRIMARY KEY (id),\n    CONSTRAINT \"property_valuations_reserveId_fkey\" FOREIGN KEY (\"reserveId\") REFERENCES public.reserves(id) ON DELETE CASCADE ON UPDATE CASCADE\n);\n\n</code></pre>"},{"location":"banco-de-dados/#historico-de-commits","title":"Hist\u00f3rico de Commits","text":"Data Tipo Descri\u00e7\u00e3o 06/10/2025 feat Adiciona a descri\u00e7\u00e3o das entidades, diagrama de entidade-relacionamento, diagrama l\u00f3gico de dados 11/10/2025 fix Altera o nome das entidades, atributos e rela\u00e7\u00f5es 28/10/2025 fix Adiciona Diagrama fisico e SQL"},{"location":"diagramas/","title":"Modelagem","text":""},{"location":"diagramas/#diagrama-de-classes","title":"Diagrama de Classes","text":"<p>Este diagrama de classes UML representa a estrutura de dados e as rela\u00e7\u00f5es entre as entidades principais do sistema \"Estadia J\u00e1\". Ele detalha as classes, atributos e m\u00e9todos, oferecendo uma vis\u00e3o clara de como os objetos se interagem no sistema.</p> <p></p>"},{"location":"diagramas/#descricao-das-classes","title":"Descri\u00e7\u00e3o das Classes","text":"<p>A seguir, uma breve descri\u00e7\u00e3o de cada classe no diagrama:</p> <ul> <li> <p>USUARIO: Representa a classe m\u00e3e dos meus tipos de usu\u00e1rios.</p> <ul> <li>Atributos: <code>idUsuario</code>, <code>nome</code>, <code>email</code>, <code>cpf</code>, <code>telefone</code>, <code>senha</code>.</li> <li>M\u00e9todos: <code>cadastroUsuario()</code>, <code>deletarUsuario()</code>, <code>atualizarUsuario()</code>, <code>loginUsuario()</code>, <code>logoutUsuario()</code>.</li> </ul> </li> <li> <p>CLIENTE: Representa os usu\u00e1rio que  busca e aluga im\u00f3veis.</p> <ul> <li>Atributos: <code>reservas</code>.</li> <li>M\u00e9todos: <code>visualizarReservas()</code>.</li> </ul> </li> <li> <p>PROPRIETARIO: Representa os usu\u00e1rio disponibiliza im\u00f3veis para aluguel.</p> <ul> <li>Atributos: <code>imovel</code>, <code>valorRecebido</code>.</li> <li>M\u00e9todos: <code>visualizarValorRecebido()</code>, <code>visualizarImoveis()</code>.</li> </ul> </li> <li> <p>RESERVA: Gerencia as reservas de im\u00f3veis feitas pelos clientes.</p> <ul> <li>Atributos: <code>idReserva</code>, <code>dataInicio</code>,<code>imovel</code>, <code>cliente</code>, <code>dataFim</code>, <code>pagamento</code>.</li> <li>M\u00e9todos: <code>realizarReserva()</code>, <code>atualizarReserva()</code>, <code>cancelarReserva()</code>.</li> </ul> </li> <li> <p>PAGAMENTO: Detalha a transa\u00e7\u00e3o financeira de uma reserva.</p> <ul> <li>Atributos: <code>idPagamento</code>, <code>valor</code>, <code>dataPagamento</code>.</li> <li>M\u00e9todos: <code>realizaPagamento()</code>, <code>acompanharPagamento()</code>.</li> </ul> </li> <li> <p>IMOVEL: Representa as propriedades dispon\u00edveis para aluguel.</p> <ul> <li>Atributos: <code>idImovel</code>, <code>tipo</code>, <code>enderecao</code>, <code>descricao</code>, <code>quantidadeQuartos</code>, <code>quantidadeSuites</code>,<code>garagemm</code>, <code>quantidadeBanheiros</code>,<code>quantidadeSalas</code>,<code>areaExterna</code>,<code>piscina</code>, <code>churrasqueira</code>, <code>cidade</code>, <code>reserva</code>, <code>valor</code>.</li> <li>M\u00e9todos: <code>cadastrarImovel()</code>, <code>atualizarImovel()</code>, <code>deletarImovel()</code>, <code>listarImoveis()</code>, <code>pesquisarImovel()</code>, <code>verDisponibilidade()</code>, <code>visualizarDetalhes()``visualizarAvaliacoes()</code>.</li> </ul> </li> <li> <p>AVALIACAOCLIENTE: Representa as avalia\u00e7\u00f5es dos im\u00f3veis.</p> <ul> <li>Atributos: <code>idAvaliacaoImovel</code>, <code>cliente</code>, <code>imovel</code>, <code>nota</code>, <code>comentario</code>, <code>dataAvaliacao</code>.</li> <li>M\u00e9todos: <code>realizarAvaliacao()</code>, <code>removerAvaliacao()</code>.</li> </ul> </li> <li> <p>AVALIACAOIMOVEL: Representa as avalia\u00e7\u00f5es do cliente.</p> <ul> <li>Atributos: <code>idAvaliacaoCliente</code>, <code>cliente</code>, <code>imovel</code>, <code>nota</code>, <code>comentario</code>, <code>dataAvaliacao</code>.</li> <li>M\u00e9todos: <code>realizarAvaliacao()</code>, <code>removerAvaliacao()</code>.</li> </ul> </li> </ul>"},{"location":"diagramas/#relacoes-entre-as-classes","title":"Rela\u00e7\u00f5es entre as Classes","text":"<ul> <li>CLIENTE e RESERVA: Um cliente pode ter m\u00faltiplas reservas, mas cada reserva pertence a um \u00fanico cliente (rela\u00e7\u00e3o de 1 para N).</li> <li>RESERVA e PAGAMENTO: Cada reserva tem um e somente um pagamento associado (rela\u00e7\u00e3o de 1 para 1).</li> <li>PROPRIETARIO e IMOVEL: Um propriet\u00e1rio pode ter muitos im\u00f3veis, e cada im\u00f3vel pertence a um propriet\u00e1rio (rela\u00e7\u00e3o de 1 para N).avalia\u00e7\u00f5es, mas cada avalia\u00e7\u00e3o \u00e9 feitas por um proprietario(rela\u00e7\u00e3o de 1 para N).</li> <li>IM\u00d3VEL e RESERVA: Um im\u00f3vel pode ser objeto de v\u00e1rias reservas, e cada reserva se refere a um \u00fanico im\u00f3vel (rela\u00e7\u00e3o de 1 para N).</li> <li>RESERVA e AVALIACAOIMOVEL: Uma reserva pode ser avaliada uma vez e uma avalia\u00e7\u00e3o se refere a uma reserva.</li> <li>RESERVA e AVALIACAOCLIENTE: Uma reserva pode ser avaliada uma vez e uma avalia\u00e7\u00e3o se refere a uma reserva.</li> </ul>"},{"location":"diagramas/#link-para-o-diagrama","title":"Link para o Diagrama","text":"<p>Voc\u00ea pode acessar e editar este diagrama de classes diretamente no Lucidchart atrav\u00e9s do link abaixo:</p> <p>Diagrama de CLasses no LucidChart</p>"},{"location":"diagramas/#historico-de-commits","title":"Hist\u00f3rico de Commits","text":"Data Tipo Descri\u00e7\u00e3o 11/09/2025 feat Adiciona o diagrama de classes e a sua descri\u00e7\u00e3o 04/10/2025 fix Corrige as rela\u00e7\u00f5es entre as classes do diagrama de classes"}]}